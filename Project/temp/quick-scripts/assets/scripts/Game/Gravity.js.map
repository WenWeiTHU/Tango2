{"version":3,"sources":["Gravity.js"],"names":["cc","Class","extends","Component","properties","Player1","type","Node","default","Player2","Equilibrium","Grav","resistence","start","player1","getComponents","player2","speedX1","speedX2","speedY1","speedY2","dir","v2","x","y","distance","mag","a","acce","update","dt","collideMap"],"mappings":"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","file":"Gravity.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\Game","sourcesContent":["/*\n * 模拟主角链接的物理系统,本质是弹簧力\n */\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    Player1: {\n      type: cc.Node,\n      default: null\n    },\n\n    Player2: {\n      type: cc.Node,\n      default: null\n    },\n\n    Equilibrium: 500, // 弹簧原长\n    Grav: 0.0005, // 控制弹力大小的参数\n    resistence: 0.02 // 地图阻力\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n\n  /*\n     * 初始化函数\n     * 功能：初始化脚本所需的设定\n     */\n  start () {\n    this.player1 = this.Player1.getComponents('Player')[0]\n    this.player2 = this.Player2.getComponents('Player')[0]\n\n    this.speedX1 = 0\n    this.speedX2 = 0\n    this.speedY1 = 0\n    this.speedY2 = 0\n\n    // 计算两个主角之间的位移向量\n    this.dir = cc.v2(this.Player1.x - this.Player2.x, this.Player1.y - this.Player2.y)\n    this.distance = this.dir.mag()\n\n    // 计算出加速度的大小\n    var a = this.Grav * (this.distance - this.Equilibrium)\n    this.acce = cc.v2(a * this.dir.x / this.distance, a * this.dir.y / this.distance)\n  },\n\n  /*\n     * 更新速度函数\n     * 功能：根据加速度来更新主角的速度\n     */\n  update (dt) {\n    // 计算两个主角之间的位移向量\n    this.dir = cc.v2(this.Player1.x - this.Player2.x, this.Player1.y - this.Player2.y)\n    this.distance = this.dir.mag()\n\n    // 计算加速度\n    var a = this.Grav * (this.distance - this.Equilibrium)\n    this.acce = cc.v2(a * this.dir.x / this.distance, a * this.dir.y / this.distance)\n\n    // 更新速度\n    this.speedX1 -= this.acce.x\n    this.speedY1 -= this.acce.y\n\n    this.speedX2 += this.acce.x\n    this.speedY2 += this.acce.y\n\n    // 为速度乘以一个衰减系数，使得移动具有一定的阻力\n    this.speedX1 -= this.speedX1 * this.resistence\n    this.speedX2 -= this.speedX2 * this.resistence\n    this.speedY1 -= this.speedY1 * this.resistence\n    this.speedY2 -= this.speedY2 * this.resistence\n\n    // 若有一方主角与墙体碰撞,该主角不受弹力效果(刚体墙)\n    if (!this.player1.collideMap) {\n      this.Player1.x += this.speedX1\n      this.Player1.y += this.speedY1\n    }\n\n    if (!this.player2.collideMap) {\n      this.Player2.x += this.speedX2\n      this.Player2.y += this.speedY2\n    }\n  }\n})\n"]}