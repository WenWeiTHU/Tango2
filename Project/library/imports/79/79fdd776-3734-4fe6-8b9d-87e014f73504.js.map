{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\scripts\\Game/assets\\scripts\\Game\\Battery.js"],"names":["cc","Class","extends","Component","properties","rotationUpdate","bulletSpeed","shootNum","Player1","type","Node","default","Player2","BulletPrefab","Prefab","Orbit","AudioSource","shootTime","onLoad","director","getCollisionManager","enabled","target","Math","random","schedule","shoot","start","play","dir","v2","x","node","y","r","atan2","degreeCenter","PI","createBullet","i","degree","cos","sin","parent","sortAllChildren","direction","zIndex","rotation","speed","newBullet","instantiate","bulletSetting","getComponent","addChild","rotateToPlayer","update","dt"],"mappings":"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","file":"Battery.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\Game","sourcesContent":["/*\n * 炮台类敌人的脚本\n */\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    rotationUpdate: 0, // 自身旋转更新\n    bulletSpeed: 0, // 子弹射速\n    shootNum: 2, // 每次发射数目\n    Player1: {\n      type: cc.Node,\n      default: null\n    },\n    Player2: {\n      type: cc.Node,\n      default: null\n    },\n    BulletPrefab: {\n      type: cc.Prefab,\n      default: null\n    },\n    Orbit: {\n      type: cc.AudioSource,\n      default: null\n    },\n    shootTime: 2 // 发射时间间隔\n  },\n\n  /*\n     * 初始化函数\n     */\n  onLoad () {\n    // 开启碰撞检测\n    cc.director.getCollisionManager().enabled = true\n\n    // 随机选取一个主角作为发射子弹的目标\n    this.target = Math.random() > 0.5 ? this.Player1 : this.Player2\n\n    // 设置间隔一定时间发射子弹\n    this.schedule(this.shoot, this.shootTime)\n  },\n\n  start () {\n\n  },\n\n  /*\n     * 发射函数\n     * 功能：朝主角方向发射若干颗成一定角度的子弹\n     */\n  shoot () {\n    this.Orbit.play()\n\n    // 从炮台到目标位置的向量\n    var dir = cc.v2(this.target.x - this.node.x, this.target.y - this.node.y)\n\n    // 计算参数\n    var r = Math.atan2(this.dir.y, this.dir.x)\n    var degreeCenter = r * 180 / (Math.PI)\n\n    // 生成正对主角的那颗子弹\n    this.createBullet(this.node.x, this.node.y, dir, -1, degreeCenter, this.bulletSpeed)\n\n    // 下面两个循环生成和主角有一定角度的子弹\n    for (let i = 1; i < this.shootNum; i++) {\n      const degree = r * 180 / (Math.PI) + 5 * i\n      this.createBullet(this.node.x, this.node.y,\n        cc.v2(Math.cos(degree * Math.PI / 180), Math.sin(degree * Math.PI / 180)),\n        -1, degree, this.bulletSpeed)\n    }\n\n    for (let i = 1; i < this.shootNum; i++) {\n      const degree = r * 180 / (Math.PI) - 5 * i\n      this.createBullet(this.node.x, this.node.y,\n        cc.v2(Math.cos(degree * Math.PI / 180), Math.sin(degree * Math.PI / 180)),\n        -1, degree, this.bulletSpeed)\n    }\n\n    // 将父节点中的所有子节点按照zIndex排序，以保证显示层级的正确\n    this.node.parent.sortAllChildren()\n  },\n\n  /*\n     * 产生子弹函数\n     * 功能：按照给定的参数实例化一个子弹对象，并加入到父节点中\n     */\n  createBullet (x, y, direction, zIndex, rotation, speed) {\n    var newBullet = cc.instantiate(this.BulletPrefab)\n    var bulletSetting = newBullet.getComponent('Bullet')\n    newBullet.rotation = 450 - rotation\n    newBullet.x = x\n    newBullet.y = y\n    newBullet.zIndex = zIndex\n    bulletSetting.direction = direction\n    bulletSetting.speed = speed\n    this.node.parent.addChild(newBullet)\n  },\n\n  /*\n     * 调整炮台角度参数\n     * 功能：旋转炮台，使得其能够对准主角\n     */\n  rotateToPlayer () {\n    this.dir = cc.v2(this.target.x - this.node.x, this.target.y - this.node.y)\n    var r = Math.atan2(this.dir.y, this.dir.x)\n    var degree = r * 180 / (Math.PI)\n    degree = 360 - degree + 90\n    this.node.rotation = degree\n  },\n\n  // 系统更新函数\n  update (dt) {\n    this.rotateToPlayer()\n  }\n})\n"]}